// <auto-generated />
using System;
using System.Collections.Generic;
using TicketSystem.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace TicketSystem.Api.Data.Migrations
{
    [DbContext(typeof(BuildifyDbContext))]
    [Migration("20240818193911_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Buildify.Api.Auth.Data.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(26)
                        .HasColumnType("character varying(26)");

                    b.Property<string>("Address")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Email")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("ExternalId")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("ExternalId");

                    b.HasIndex("Role");

                    b.HasIndex("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Buildify.Api.Blogs.Data.Blog", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(26)
                        .HasColumnType("character varying(26)");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<List<string>>("Image")
                        .HasColumnType("text[]");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("character varying(26)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("Buildify.Api.Companies.Data.Company", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(26)
                        .HasColumnType("character varying(26)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<List<string>>("ImageGallery")
                        .HasColumnType("text[]");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PrimaryColor")
                        .HasColumnType("text");

                    b.Property<string>("SecondaryColor")
                        .HasColumnType("text");

                    b.Property<List<string>>("ServicesImage")
                        .HasColumnType("text[]");

                    b.Property<string>("SubDomain")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("character varying(26)");

                    b.HasKey("Id");

                    b.HasIndex("SubDomain");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Buildify.Api.Companies.Data.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("character varying(26)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FeatuerColor")
                        .HasColumnType("text");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("Buildify.Api.Companies.Data.Social", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("character varying(26)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Socials");
                });

            modelBuilder.Entity("Buildify.Api.MediaFiles.Data.Media", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(26)
                        .HasColumnType("character varying(26)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<string>("UploaderId")
                        .HasMaxLength(26)
                        .HasColumnType("character varying(26)");

                    b.HasKey("Id");

                    b.HasIndex("UploaderId");

                    b.ToTable("Medias");
                });

            modelBuilder.Entity("Buildify.Api.Blogs.Data.Blog", b =>
                {
                    b.HasOne("Buildify.Api.Auth.Data.User", "User")
                        .WithMany("Blogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Buildify.Api.Companies.Data.Company", b =>
                {
                    b.HasOne("Buildify.Api.Auth.Data.User", "User")
                        .WithOne("Company")
                        .HasForeignKey("Buildify.Api.Companies.Data.Company", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Buildify.Api.Companies.Data.ActionButton", "ActionButton", b1 =>
                        {
                            b1.Property<string>("CompanyId")
                                .HasColumnType("character varying(26)");

                            b1.Property<string>("Action")
                                .HasColumnType("text");

                            b1.Property<string>("Color")
                                .HasColumnType("text");

                            b1.Property<string>("Text")
                                .HasColumnType("text");

                            b1.HasKey("CompanyId");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyId");
                        });

                    b.OwnsOne("Buildify.Api.Companies.Data.Banner", "Banner", b1 =>
                        {
                            b1.Property<string>("CompanyId")
                                .HasColumnType("character varying(26)");

                            b1.Property<string>("Image")
                                .HasColumnType("text");

                            b1.Property<string>("Text")
                                .HasColumnType("text");

                            b1.HasKey("CompanyId");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyId");
                        });

                    b.OwnsOne("Buildify.Api.Companies.Data.ButtomGrid", "ButtomGrid", b1 =>
                        {
                            b1.Property<string>("CompanyId")
                                .HasColumnType("character varying(26)");

                            b1.HasKey("CompanyId");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyId");

                            b1.OwnsOne("Buildify.Api.Companies.Data.Grid1", "Grid1", b2 =>
                                {
                                    b2.Property<string>("ButtomGridCompanyId")
                                        .HasColumnType("character varying(26)");

                                    b2.Property<string>("Title")
                                        .HasColumnType("text");

                                    b2.HasKey("ButtomGridCompanyId");

                                    b2.ToTable("Companies");

                                    b2.WithOwner()
                                        .HasForeignKey("ButtomGridCompanyId");

                                    b2.OwnsOne("Buildify.Api.Companies.Data.Button", "Button", b3 =>
                                        {
                                            b3.Property<string>("Grid1ButtomGridCompanyId")
                                                .HasColumnType("character varying(26)");

                                            b3.Property<string>("Action")
                                                .HasColumnType("text");

                                            b3.Property<string>("Color")
                                                .HasColumnType("text");

                                            b3.Property<string>("Text")
                                                .HasColumnType("text");

                                            b3.HasKey("Grid1ButtomGridCompanyId");

                                            b3.ToTable("Companies");

                                            b3.WithOwner()
                                                .HasForeignKey("Grid1ButtomGridCompanyId");
                                        });

                                    b2.Navigation("Button")
                                        .IsRequired();
                                });

                            b1.OwnsOne("Buildify.Api.Companies.Data.Grid2", "Grid2", b2 =>
                                {
                                    b2.Property<string>("ButtomGridCompanyId")
                                        .HasColumnType("character varying(26)");

                                    b2.Property<string>("Image")
                                        .HasColumnType("text");

                                    b2.Property<string>("Title")
                                        .HasColumnType("text");

                                    b2.HasKey("ButtomGridCompanyId");

                                    b2.ToTable("Companies");

                                    b2.WithOwner()
                                        .HasForeignKey("ButtomGridCompanyId");
                                });

                            b1.Navigation("Grid1")
                                .IsRequired();

                            b1.Navigation("Grid2")
                                .IsRequired();
                        });

                    b.OwnsOne("Buildify.Api.Companies.Data.Hero", "Hero", b1 =>
                        {
                            b1.Property<string>("CompanyId")
                                .HasColumnType("character varying(26)");

                            b1.Property<string>("Image")
                                .HasColumnType("text");

                            b1.Property<string>("Text")
                                .HasColumnType("text");

                            b1.HasKey("CompanyId");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyId");
                        });

                    b.OwnsOne("Buildify.Api.Companies.Data.PersonalInfo", "PersonalInfo", b1 =>
                        {
                            b1.Property<string>("CompanyId")
                                .HasColumnType("character varying(26)");

                            b1.Property<string>("EmailContact")
                                .HasColumnType("text");

                            b1.Property<string>("Location")
                                .HasColumnType("text");

                            b1.Property<string>("PhoneContact")
                                .HasColumnType("text");

                            b1.Property<List<string>>("SocialMediaLinks")
                                .HasColumnType("text[]");

                            b1.HasKey("CompanyId");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyId");
                        });

                    b.OwnsOne("Buildify.Api.Companies.Data.SubscriptionInfo", "SubscriptionInfo", b1 =>
                        {
                            b1.Property<string>("CompanyId")
                                .HasColumnType("character varying(26)");

                            b1.Property<DateTime?>("SubscriptionEndDate")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<DateTime?>("SubscriptionStartDate")
                                .HasColumnType("timestamp without time zone");

                            b1.HasKey("CompanyId");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyId");
                        });

                    b.Navigation("ActionButton")
                        .IsRequired();

                    b.Navigation("Banner")
                        .IsRequired();

                    b.Navigation("ButtomGrid")
                        .IsRequired();

                    b.Navigation("Hero")
                        .IsRequired();

                    b.Navigation("PersonalInfo")
                        .IsRequired();

                    b.Navigation("SubscriptionInfo")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Buildify.Api.Companies.Data.Feature", b =>
                {
                    b.HasOne("Buildify.Api.Companies.Data.Company", "Company")
                        .WithMany("Features")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Buildify.Api.Companies.Data.Social", b =>
                {
                    b.HasOne("Buildify.Api.Companies.Data.Company", "Company")
                        .WithMany("Socials")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Buildify.Api.Auth.Data.User", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Buildify.Api.Companies.Data.Company", b =>
                {
                    b.Navigation("Features");

                    b.Navigation("Socials");
                });
#pragma warning restore 612, 618
        }
    }
}
